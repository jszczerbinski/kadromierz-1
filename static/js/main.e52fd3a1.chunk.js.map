{"version":3,"sources":["styles/navbar.js","components/Navbar/index.jsx","components/CustomTextField/index.jsx","styles/homepage.js","components/CustomAutocomplete/index.jsx","views/HomePage/index.jsx","containers/HomePage/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["styles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","justifyContent","useStyles","makeStyles","Navbar","handleOpenModal","classes","className","AppBar","position","Toolbar","Button","color","onClick","Typography","edge","variant","CustomTextField","props","TextField","formControl","marginBottom","marginLeft","minWidth","maxWidth","modal","buttonStyle","textField","breakpoints","down","marginTop","dataControls","flexDirection","CustomAutocomplete","selectedEmployees","otherProps","Autocomplete","required","multiple","limitTags","size","onChange","options","renderOption","id","option","selected","Fragment","Checkbox","checked","name","findIndex","employee","getOptionLabel","renderInput","params","label","placeholder","HomePage","setDate","setSelectedContracts","setSelectedLocations","setSelectedRoles","setSelectedEmployees","handleLoadingEmployees","handleSubmitForm","state","useState","open","setOpen","handleCloseModal","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","type","defaultValue","InputLabelProps","shrink","startDate","InputProps","inputProps","min","roles","locations","onOpen","filterEmployees","disableCloseOnSelect","noOptionsText","contracts","DialogActions","HomePageContainer","e","setState","target","value","values","selectedRoles","map","val","selectedContracts","selectedLocations","undefined","find","x","setFilterEmployees","filters","selectedPeople","allEmployees","filter","em","combinedEmployeeData","role","contract","location","every","v","includes","length","employeesWithoutAll","cloneOfEmployees","_","cloneDeep","emRole","filterRole","Object","assign","emContract","filterContract","emLocations","loc","filterLocation","console","log","endDate","employees","this","React","PureComponent","App","Boolean","window","hostname","match","createMuiTheme","palette","primary","main","contrastText","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e52fd3a1.chunk.js","sourcesContent":["const styles = (theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n        display:\"flex\",\r\n        justifyContent:\"flex-end\"\r\n      },\r\n  });\r\n\r\n\r\nexport default styles;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"../../styles/navbar\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Navbar = ({ handleOpenModal }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Button color=\"inherit\" onClick={handleOpenModal}>\r\n            Otw√≥rz modal\r\n          </Button>\r\n          <Typography edge=\"end\" variant=\"h6\" className={classes.title}>\r\n            Kadromierz\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nconst CustomTextField = (props) => {\r\n  return <TextField {...props} />;\r\n};\r\n\r\nexport default CustomTextField;\r\n","\r\nconst styles = (theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      minWidth: 200,\r\n      maxWidth: 500,\r\n    },\r\n    modal: {\r\n      maxWidth: \"90vw\",\r\n    },\r\n    buttonStyle:{\r\n      color:\"#fff\"\r\n    },\r\n    textField: {\r\n      marginLeft: \"10px\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        marginLeft: 0,\r\n        marginTop: \"5px\",\r\n      },\r\n    },\r\n    dataControls: {\r\n      marginBottom: theme.spacing(3),\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      minWidth: 200,\r\n      maxWidth: 500,\r\n      display:\"flex\",\r\n      justifyContent:\"space-around\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        // display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n  });\r\n\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CustomTextField from \"../CustomTextField/index\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst CustomAutocomplete = (props) => {\r\n  const { selectedEmployees, ...otherProps } = props;\r\n  const renderOptions = (option, { selected }) => (\r\n    <React.Fragment>\r\n      <Checkbox checked={selected} />\r\n      {option.name}\r\n    </React.Fragment>\r\n  );\r\n  const renderOptionsEmployees = (option, { selected }) => {\r\n    const selectEmployeeIndex = selectedEmployees.findIndex(\r\n      (employee) => employee.name === \"Wszyscy\"\r\n    );\r\n    if (selectEmployeeIndex > -1) {\r\n      selected = true;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Checkbox checked={selected} />\r\n        {option.name}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  const optionLabel = (option) => option.name;\r\n  const renderInputs = (params) => (\r\n    <CustomTextField\r\n      {...params}\r\n      variant=\"standard\"\r\n      label={otherProps.label}\r\n      placeholder=\"Search\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Autocomplete\r\n      required\r\n      className={otherProps.className}\r\n      multiple\r\n      variant=\"outlined\"\r\n      limitTags={2}\r\n      size=\"small\"\r\n      onChange={otherProps.onChange}\r\n      options={otherProps.options}\r\n      renderOption={\r\n        otherProps.id !== \"selectEmployees\"\r\n          ? renderOptions\r\n          : renderOptionsEmployees\r\n      }\r\n      getOptionLabel={optionLabel}\r\n      renderInput={renderInputs}\r\n      {...otherProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomAutocomplete;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Navbar from \"../../components/Navbar/index.jsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { contracts } from \"../../assets/contracts.json\";\r\nimport { roles } from \"../../assets/roles.json\";\r\nimport { locations } from \"../../assets/locations.json\";\r\nimport CustomTextField from \"../../components/CustomTextField/index.jsx\";\r\nimport styles from \"../../styles/homepage\";\r\nimport CustomAutocomplete from \"../../components/CustomAutocomplete/index.jsx\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst HomePage = ({\r\n  setDate,\r\n  setSelectedContracts,\r\n  setSelectedLocations,\r\n  setSelectedRoles,\r\n  setSelectedEmployees,\r\n  handleLoadingEmployees,\r\n  handleSubmitForm,\r\n  state,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        handleOpenModal={handleOpenModal}\r\n        handleCloseModal={handleCloseModal}\r\n      />\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Wybierz pracownik√≥w</DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.dataControls}>\r\n            <CustomTextField\r\n              id=\"date_start\"\r\n              label=\"Select start date\"\r\n              name=\"startDate\"\r\n              type=\"date\"\r\n              defaultValue=\"2017-05-03\"\r\n              onChange={setDate}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <CustomTextField\r\n              id=\"date_end\"\r\n              label=\"Select end date\"\r\n              name=\"endDate\"\r\n              type=\"date\"\r\n              className={classes.textField}\r\n              onChange={setDate}\r\n              defaultValue={state.startDate}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                inputProps: { min: state.startDate },\r\n              }}\r\n            />\r\n          </div>\r\n          <CustomAutocomplete\r\n            id=\"selectRoles\"\r\n            onChange={setSelectedRoles}\r\n            options={roles}\r\n            className={classes.formControl}\r\n            label={\"Stanowiska\"}\r\n          />\r\n          <CustomAutocomplete\r\n            id=\"selectLocations\"\r\n            onChange={setSelectedLocations}\r\n            options={locations}\r\n            className={classes.formControl}\r\n            label={\"Lokalizacje\"}\r\n          />\r\n          <CustomAutocomplete\r\n            id=\"selectEmployees\"\r\n            onOpen={handleLoadingEmployees}\r\n            onChange={setSelectedEmployees}\r\n            options={state.filterEmployees}\r\n            className={classes.formControl}\r\n            selectedEmployees={state.selectedEmployees}\r\n            disableCloseOnSelect\r\n            noOptionsText=\"Nie znaleziono pracownik√≥w\"\r\n            label={\"Pracownicy\"}\r\n          />\r\n          <CustomAutocomplete\r\n            id=\"selectContracts\"\r\n            onChange={setSelectedContracts}\r\n            options={contracts}\r\n            className={classes.formControl}\r\n            label={\"Warunki zatrudnienia\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleSubmitForm}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className={classes.buttonStyle}\r\n          >\r\n            Zatwierd≈∫\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { employees } from \"../../assets/employees.json\";\r\nimport { locations } from \"../../assets/locations.json\";\r\nimport { roles } from \"../../assets/roles.json\";\r\nimport { contracts } from \"../../assets/contracts.json\";\r\nimport HomePage from \"../../views/HomePage\";\r\nimport _ from \"lodash\";\r\n\r\nclass HomePageContainer extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      startDate: \"2017-05-03\",\r\n      endDate: \"2017-05-03\",\r\n      selectedRoles: [],\r\n      selectedContracts: [],\r\n      selectedLocations: [],\r\n      filterEmployees: _.cloneDeep(employees),\r\n      selectedEmployees: [],\r\n      allEmployees: _.cloneDeep(employees),\r\n    };\r\n  }\r\n\r\n  setDate = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  setSelectedRoles = (e, values) => {\r\n    this.setState({ selectedRoles: values.map((val) => val.id) });\r\n  };\r\n\r\n  setSelectedContracts = (e, values) => {\r\n    this.setState({ selectedContracts: values.map((val) => val.id) });\r\n  };\r\n\r\n  setSelectedLocations = (e, values) => {\r\n    this.setState({ selectedLocations: values.map((val) => val.id) });\r\n  };\r\n\r\n  setSelectedEmployees = (e, values) => {\r\n    const selectAll = values.find((x) => x.name === \"Wszyscy\");\r\n    if (selectAll !== undefined) {\r\n      values = this.state.filterEmployees;\r\n    }\r\n    this.setState({ selectedEmployees: values });\r\n  };\r\n\r\n  setFilterEmployees = (e, values) =>\r\n    this.setState({ filterEmployees: values });\r\n\r\n  handleLoadingEmployees = () => {\r\n    const { selectedContracts, selectedRoles, selectedLocations } = this.state;\r\n\r\n    const filters = [\r\n      ...selectedContracts,\r\n      ...selectedLocations,\r\n      ...selectedRoles,\r\n    ];\r\n    let selectedPeople = this.state.allEmployees.filter((em) => {\r\n      const combinedEmployeeData = [...em.role, ...em.contract, ...em.location];\r\n      return filters.every((v) => combinedEmployeeData.includes(v));\r\n    });\r\n\r\n    if (selectedPeople.length === 1) {\r\n      selectedPeople = [];\r\n    }\r\n    this.setState({ filterEmployees: selectedPeople });\r\n  };\r\n\r\n  handleSubmitForm = () => {\r\n    const employeesWithoutAll = this.state.selectedEmployees.filter(\r\n      (em) => em.id !== 0\r\n    );\r\n\r\n    const cloneOfEmployees = _.cloneDeep(employeesWithoutAll);\r\n\r\n    // eslint-disable-next-line\r\n    cloneOfEmployees.map((employee) => {\r\n      const emRole = roles.find(\r\n        (filterRole) => filterRole.id === employee.role[0]\r\n      );\r\n\r\n      employee.role[0] = Object.assign({}, emRole);\r\n      const emContract = contracts.find(\r\n        (filterContract) => filterContract.id === employee.contract[0]\r\n      );\r\n\r\n      employee.contract[0] = Object.assign({}, emContract);\r\n      const emLocations = employee.location.map((loc) =>\r\n        locations.find((filterLocation) => filterLocation.id === loc)\r\n      );\r\n      employee.location = [...emLocations];\r\n    });\r\n\r\n    console.log(\"Selected employees\", cloneOfEmployees);\r\n    console.log(\"Start date\", this.state.startDate);\r\n    console.log(\"End date\", this.state.endDate);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <HomePage\r\n        setDate={this.setDate}\r\n        setSelectedContracts={this.setSelectedContracts}\r\n        setSelectedLocations={this.setSelectedLocations}\r\n        setSelectedRoles={this.setSelectedRoles}\r\n        setFilterEmployees={this.setFilterEmployees}\r\n        setSelectedEmployees={this.setSelectedEmployees}\r\n        handleLoadingEmployees={this.handleLoadingEmployees}\r\n        state={this.state}\r\n        handleSubmitForm={this.handleSubmitForm}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePageContainer;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HomePageContainer from \"./containers/HomePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HomePageContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff9800\",contrastText: \"#fff\"\r\n    },\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n    <App />\r\n    </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}